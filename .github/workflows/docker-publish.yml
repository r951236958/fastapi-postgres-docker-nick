name: Docker

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: user/app:latest

      - name: Deploy Docker Image to Heroku App
        uses: steinskeeper/heroku-deploy@latest
        with:
          # Email Linked to your Heroku Account
          email: ${{ secrets.HEROKU_EMAIL }}
          # Heroku Dyno Formation

          # Your Heroku API Key
          api_key: ${{ secrets.HEROKU_TOKEN }}
          # Your Heroku App Name
          app_name: ${{ secrets.HEROKU_APP_NAME }}
          # Dokerfile path
          dockerfile_path: '.'
    # Optional build parameters
